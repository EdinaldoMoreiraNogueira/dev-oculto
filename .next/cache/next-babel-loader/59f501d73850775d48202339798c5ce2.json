{"ast":null,"code":"import { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useRouter } from 'next/router';\nimport styled from 'styled-components';\nimport ImageContainer from '../Container/ImageContainer';\nimport Logo from '../logo';\nimport NameEmailForm from '../nameEmailForm';\nconst Container = styled.div.withConfig({\n  displayName: \"SecretHeader__Container\",\n  componentId: \"sc-1oay8m0-0\"\n})([\"display:flex;flex-direction:column;align-items:center;justify-content:center;color:\", \";\"], ({\n  theme\n}) => theme.colors.light);\nconst DivForm = styled.div.withConfig({\n  displayName: \"SecretHeader__DivForm\",\n  componentId: \"sc-1oay8m0-1\"\n})([\"display:flex;flex-direction:row;align-items:center;justify-content:center;flex-shrink:0;\"]);\nexport default function SecretHeader({\n  onAddParticipant\n}) {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n\n  const handleSubmit = async ({\n    name,\n    email\n  }) => {\n    const {\n      NEXT_PUBLIC_API_URL\n    } = process.env;\n    const data = await fetch(`${NEXT_PUBLIC_API_URL}/secret/${id}/participants`, {\n      method: 'POST',\n      body: JSON.stringify({\n        name,\n        email\n      })\n    });\n    handleResponse({\n      name,\n      email,\n      response: await data.json()\n    });\n  };\n\n  const handleResponse = ({\n    name,\n    email,\n    response\n  }) => {\n    if (response.success) {\n      onAddParticipant({\n        name,\n        email,\n        externalId: response.id\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxs(ImageContainer, {\n    children: [/*#__PURE__*/_jsxs(Container, {\n      children: [/*#__PURE__*/_jsx(Logo, {}), /*#__PURE__*/_jsx(\"p\", {\n        children: \"Voc\\xEA foi convidado para participar deste amigo secreto de Fulano!\"\n      })]\n    }), /*#__PURE__*/_jsx(DivForm, {\n      children: /*#__PURE__*/_jsx(NameEmailForm, {\n        buttonText: \"Participar\",\n        onSubmit: handleSubmit\n      })\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}