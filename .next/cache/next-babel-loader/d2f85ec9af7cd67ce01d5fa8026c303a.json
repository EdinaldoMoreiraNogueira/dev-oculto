{"ast":null,"code":"import _regeneratorRuntime from \"/home/acer/Diversos/devweek/dev-oculto/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/acer/Diversos/devweek/dev-oculto/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useState } from 'react';\nimport { useRouter } from 'next/router';\nimport styled from 'styled-components';\nimport Button from './button';\nvar Container = styled.div.withConfig({\n  displayName: \"Sort__Container\",\n  componentId: \"snc6fl-0\"\n})([\"display:flex;align-items:center;justify-content:center;\"]);\nexport default function Sort(_ref) {\n  var hasDrew = _ref.hasDrew;\n  var router = useRouter();\n  var _router$query = router.query,\n      id = _router$query.id,\n      adminKey = _router$query.adminKey;\n\n  var _useState = useState(false),\n      drew = _useState[0],\n      setDrew = _useState[1];\n\n  var handleSort = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var NEXT_PUBLIC_API_URL, _yield$fetch, status;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              NEXT_PUBLIC_API_URL = process.env.NEXT_PUBLIC_API_URL;\n              _context.next = 3;\n              return fetch(\"\".concat(NEXT_PUBLIC_API_URL, \"/secrets/\").concat(id, \"/draw\"), {\n                method: 'PUT',\n                headers: new Headers({\n                  'admin-key': adminKey\n                })\n              });\n\n            case 3:\n              _yield$fetch = _context.sent;\n              status = _yield$fetch.status;\n              if (status === 200) setDrew(true);\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSort() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var DREW_STATUS = hasDrew || drew;\n  return /*#__PURE__*/_jsxs(Container, {\n    children: [!DREW_STATUS && /*#__PURE__*/_jsx(Button, {\n      onClick: handleSort,\n      children: \"Sortear\"\n    }), DREW_STATUS && /*#__PURE__*/_jsx(\"p\", {\n      children: \"O sorteio j\\xE1 foi realizado.\"\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}