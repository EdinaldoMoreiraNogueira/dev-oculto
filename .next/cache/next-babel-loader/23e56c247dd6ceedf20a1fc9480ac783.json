{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { useRouter } from 'next/router';\nimport styled from 'styled-components';\nimport { RiDeleteBin2Fill } from \"react-icons/ri\";\nconst H4 = styled.h4.withConfig({\n  displayName: \"Participants__H4\",\n  componentId: \"sc-1d35l0n-0\"\n})([\"text-align:center;\"]);\nconst Container = styled.div.withConfig({\n  displayName: \"Participants__Container\",\n  componentId: \"sc-1d35l0n-1\"\n})([\"display:flex;padding:5px 20px;justify-content:center;align-items:center;flex-direction:column;\"]);\nconst ParticipantDiv = styled.div.withConfig({\n  displayName: \"Participants__ParticipantDiv\",\n  componentId: \"sc-1d35l0n-2\"\n})([\"display:flex;align-items:center;\"]);\nconst ParticipantDelete = styled.span.withConfig({\n  displayName: \"Participants__ParticipantDelete\",\n  componentId: \"sc-1d35l0n-3\"\n})([\"color:\", \";cursor:pointer;\"], ({\n  theme\n}) => theme.colors.primary);\n\nconst Participant = ({\n  name,\n  email,\n  showButton,\n  deleteParticipant\n}) => /*#__PURE__*/_jsxs(ParticipantDiv, {\n  children: [showButton && /*#__PURE__*/_jsx(ParticipantDelete, {\n    onClick: deleteParticipant,\n    children: /*#__PURE__*/_jsx(RiDeleteBin2Fill, {})\n  }), name, \" (\", email, \")\"]\n});\n\nexport default function Participants({\n  showButton,\n  participants,\n  setParticipants\n}) {\n  const router = useRouter();\n  const {\n    id,\n    adminKey\n  } = router.query;\n\n  const deleteAPIParticipant = async participantId => {\n    const {\n      NEXT_PUBLIC_API_URL\n    } = process.env;\n    return await fetch(`${NEXT_PUBLIC_API_URL}/secrets/${id}/participants/${participantId}`, {\n      method: 'DELETE',\n      headers: new Headers({\n        'admin-key': adminKey\n      })\n    });\n  };\n\n  const deleteParticipant = async id => {\n    const {\n      status\n    } = await deleteAPIParticipant(id);\n    if (status === 204) setParticipants(participants.filter(({\n      externalId\n    }) => externalId !== id));\n  };\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(H4, {\n      children: \"Participantes: \"\n    }), /*#__PURE__*/_jsxs(Container, {\n      children: [participants.length === 0 && /*#__PURE__*/_jsx(\"p\", {\n        children: \"Nenhum participante cadastrado ainda.\"\n      }), participants.map(({\n        name,\n        email,\n        externalId\n      }, key) => {\n        return /*#__PURE__*/_jsx(Participant, {\n          name: name,\n          email: email,\n          showButton: showButton,\n          deleteParticipant: () => deleteParticipant(externalId)\n        }, `participant-${key}`);\n      })]\n    })]\n  });\n}","map":null,"metadata":{},"sourceType":"module"}